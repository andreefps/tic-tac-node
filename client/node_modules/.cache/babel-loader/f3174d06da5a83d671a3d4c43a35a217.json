{"ast":null,"code":"var _jsxFileName = \"/home/possiedi/dev/tic-tac-node/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { Board } from \"./components/Board\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [board, setBoard] = useState();\n  const [isPlayerOneTurn, setIsPlayerOneTurn] = useState(true);\n  const [matchingTiles, setMatchingTiles] = useState([]);\n  const [gameStarted, setGameStarted] = useState(false);\n  useEffect(() => {\n    if (board && board.gameOver) {\n      setMatchingTiles(board.matchingTiles);\n    }\n  }, [board]);\n\n  async function fetchGame(id) {\n    if (!id) {\n      const {\n        data\n      } = await axios.post(\"http://localhost:3001/game\");\n      return setBoard(data);\n    }\n\n    const {\n      data\n    } = await axios.post(`http://localhost:3001/game/${board === null || board === void 0 ? void 0 : board.id}`);\n    return setBoard(data);\n  }\n\n  async function handlePlay(tileIndex) {\n    if (board && !board.gameOver) {\n      const {\n        data\n      } = await axios.post(`http://localhost:3001/play${board.id}&${tileIndex}&${isPlayerOneTurn ? \"X\" : \"O\"}`);\n      setBoard(data);\n\n      if (!data.gameOver) {\n        setIsPlayerOneTurn(!isPlayerOneTurn);\n      }\n    }\n  }\n\n  function handleNewGame() {\n    fetchGame();\n    setMatchingTiles([]);\n    setGameStarted(true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"newGameButton\",\n        onClick: () => handleNewGame(),\n        children: \"New game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), gameStarted && /*#__PURE__*/_jsxDEV(Board, {\n        board: board,\n        handlePlay: handlePlay,\n        isPlayerOneTurn: isPlayerOneTurn,\n        matchingTiles: matchingTiles\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), (board === null || board === void 0 ? void 0 : board.gameOver) && /*#__PURE__*/_jsxDEV(\"strong\", {\n        className: \"winMessage\",\n        children: board.winner ? `Player\" ${isPlayerOneTurn ? 1 : 2} \"won !` : \"Game Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+LUkcU8tclXdQm2cCKWl0+HEQcU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","axios","Board","App","board","setBoard","isPlayerOneTurn","setIsPlayerOneTurn","matchingTiles","setMatchingTiles","gameStarted","setGameStarted","gameOver","fetchGame","id","data","post","handlePlay","tileIndex","handleNewGame","winner"],"sources":["/home/possiedi/dev/tic-tac-node/client/src/App.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport { Game } from \"../../types\";\nimport { Board } from \"./components/Board\";\n\nfunction App() {\n  const [board, setBoard] = useState<Game>();\n  const [isPlayerOneTurn, setIsPlayerOneTurn] = useState(true);\n  const [matchingTiles, setMatchingTiles] = useState<Number[]>([]);\n  const [gameStarted, setGameStarted] = useState(false);\n\n  useEffect(() => {\n    if (board && board.gameOver) {\n      setMatchingTiles(board.matchingTiles);\n    }\n  }, [board]);\n\n  async function fetchGame(id?: String) {\n    if (!id) {\n      const { data } = await axios.post(\"http://localhost:3001/game\");\n      return setBoard(data);\n    }\n    const { data } = await axios.post(\n      `http://localhost:3001/game/${board?.id}`\n    );\n    return setBoard(data);\n  }\n\n  async function handlePlay(tileIndex: Number) {\n    if (board && !board.gameOver) {\n      const { data } = await axios.post(\n        `http://localhost:3001/play${board.id}&${tileIndex}&${\n          isPlayerOneTurn ? \"X\" : \"O\"\n        }`\n      );\n      setBoard(data);\n      if (!data.gameOver) {\n        setIsPlayerOneTurn(!isPlayerOneTurn);\n      }\n    }\n  }\n\n  function handleNewGame() {\n    fetchGame();\n    setMatchingTiles([]);\n    setGameStarted(true);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <a className=\"newGameButton\" onClick={() => handleNewGame()}>\n          New game\n        </a>\n        {gameStarted && (\n          <Board\n            board={board}\n            handlePlay={handlePlay}\n            isPlayerOneTurn={isPlayerOneTurn}\n            matchingTiles={matchingTiles}\n          />\n        )}\n        {board?.gameOver && (\n          <strong className={\"winMessage\"}>\n            {board.winner\n              ? `Player\" ${isPlayerOneTurn ? 1 : 2} \"won !`\n              : \"Game Over\"}\n          </strong>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,oBAAtB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,EAAlC;EACA,MAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,IAAD,CAAtD;EACA,MAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAW,EAAX,CAAlD;EACA,MAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;EAEAD,SAAS,CAAC,MAAM;IACd,IAAIK,KAAK,IAAIA,KAAK,CAACQ,QAAnB,EAA6B;MAC3BH,gBAAgB,CAACL,KAAK,CAACI,aAAP,CAAhB;IACD;EACF,CAJQ,EAIN,CAACJ,KAAD,CAJM,CAAT;;EAMA,eAAeS,SAAf,CAAyBC,EAAzB,EAAsC;IACpC,IAAI,CAACA,EAAL,EAAS;MACP,MAAM;QAAEC;MAAF,IAAW,MAAMd,KAAK,CAACe,IAAN,CAAW,4BAAX,CAAvB;MACA,OAAOX,QAAQ,CAACU,IAAD,CAAf;IACD;;IACD,MAAM;MAAEA;IAAF,IAAW,MAAMd,KAAK,CAACe,IAAN,CACpB,8BAA6BZ,KAA9B,aAA8BA,KAA9B,uBAA8BA,KAAK,CAAEU,EAAG,EADnB,CAAvB;IAGA,OAAOT,QAAQ,CAACU,IAAD,CAAf;EACD;;EAED,eAAeE,UAAf,CAA0BC,SAA1B,EAA6C;IAC3C,IAAId,KAAK,IAAI,CAACA,KAAK,CAACQ,QAApB,EAA8B;MAC5B,MAAM;QAAEG;MAAF,IAAW,MAAMd,KAAK,CAACe,IAAN,CACpB,6BAA4BZ,KAAK,CAACU,EAAG,IAAGI,SAAU,IACjDZ,eAAe,GAAG,GAAH,GAAS,GACzB,EAHoB,CAAvB;MAKAD,QAAQ,CAACU,IAAD,CAAR;;MACA,IAAI,CAACA,IAAI,CAACH,QAAV,EAAoB;QAClBL,kBAAkB,CAAC,CAACD,eAAF,CAAlB;MACD;IACF;EACF;;EAED,SAASa,aAAT,GAAyB;IACvBN,SAAS;IACTJ,gBAAgB,CAAC,EAAD,CAAhB;IACAE,cAAc,CAAC,IAAD,CAAd;EACD;;EAED,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,uBACE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QAAG,SAAS,EAAC,eAAb;QAA6B,OAAO,EAAE,MAAMQ,aAAa,EAAzD;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,EAIGT,WAAW,iBACV,QAAC,KAAD;QACE,KAAK,EAAEN,KADT;QAEE,UAAU,EAAEa,UAFd;QAGE,eAAe,EAAEX,eAHnB;QAIE,aAAa,EAAEE;MAJjB;QAAA;QAAA;QAAA;MAAA,QALJ,EAYG,CAAAJ,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEQ,QAAP,kBACC;QAAQ,SAAS,EAAE,YAAnB;QAAA,UACGR,KAAK,CAACgB,MAAN,GACI,WAAUd,eAAe,GAAG,CAAH,GAAO,CAAE,SADtC,GAEG;MAHN;QAAA;QAAA;QAAA;MAAA,QAbJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD;;GAnEQH,G;;KAAAA,G;AAqET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}